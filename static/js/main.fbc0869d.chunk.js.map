{"version":3,"sources":["share/images/social-media-icons/facebook.svg","share/images/social-media-icons/linkedin.svg","share/images/social-media-icons/twitter.svg","share/images/social-media-icons/instagram.svg","share/images/social-media-icons/github.svg","share/images/gary3.jpg","NGUYEN_GARY_resume.pdf","share/images/about.jpg","share/components/NavBar/index.js","Home/index.js","About/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","open","handleClick","handleNavClick","class","onClick","role","id","type","checked","to","Home","useState","navOpen","setNavOpen","className","src","headshot","alt","href","target","rel","instagram","facebook","linkedin","twitter","github","style","backgroundColor","params","particles","About","about","aria-label","resume","Routes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbc0869d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.70afa4d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.1a1c953d.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.14778014.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.f88b2096.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.e5af0bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/gary3.ab664387.jpg\";","module.exports = __webpack_public_path__ + \"static/media/NGUYEN_GARY_resume.290acccd.pdf\";","module.exports = __webpack_public_path__ + \"static/media/about.ad64b847.jpg\";","import React from 'react';\r\n// import { Link } from 'react-scroll';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './navbar.scss';\r\n\r\nconst NavBar = ({open, handleClick}) => {\r\n\r\n  const handleNavClick = () => handleClick(!open);\r\n\r\n  return (\r\n    <>\r\n      { open ? <div class=\"dark_layer\" onClick={() => handleNavClick()}/> : <div /> }\r\n      <nav role=\"navigation\">\r\n        <div id=\"menuToggle\">\r\n  { open ? <input type=\"checkbox\" onClick={handleNavClick} checked /> : <input type=\"checkbox\" onClick={handleNavClick} /> }\r\n        \r\n          {/* Burger */}\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          \r\n          <ul id=\"menu\">\r\n            <Link to=\"/\"><li>Home</li></Link>\r\n            <Link to=\"/about\"><li onClick={handleNavClick}>About</li></Link>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport NavBar from '../share/components/NavBar';\r\nimport particles from './particles.json';\r\n\r\n\r\nimport facebook from '../share/images/social-media-icons/facebook.svg';\r\nimport linkedin from '../share/images/social-media-icons/linkedin.svg';\r\nimport twitter from '../share/images/social-media-icons/twitter.svg';\r\nimport instagram from '../share/images/social-media-icons/instagram.svg';\r\nimport github from '../share/images/social-media-icons/github.svg';\r\nimport headshot from '../share/images/gary3.jpg';\r\nimport './Home.scss';\r\n\r\nconst Home = () => {\r\n  const [navOpen, setNavOpen] = useState(false)\r\n\r\n  return (\r\n    <div className=\"home_wrapper\">\r\n      \r\n      <div className=\"middle_layer\" />\r\n      <div className=\"top_layer\" />\r\n\r\n      <div className=\"intro\">\r\n        {/* <div className=\"intro__image\"/> */}\r\n        <img className=\"intro__image\" src={headshot} alt=\"home\"/>\r\n        <div className=\"intro__text\">\r\n          <div className=\"name\">Gary Nguyen</div>\r\n          <div className=\"education\">CS @ MIT</div>\r\n          <div className=\"tagline\">Creator. Developer. Learner.</div>\r\n          <div className=\"social-media\">\r\n            <a href=\"https://www.instagram.com/garynguyen18/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">\r\n              <img className=\"icon\" src={instagram} alt=\"IG\"/>\r\n            </a>\r\n            <a href=\"https://www.facebook.com/profile.php?id=100017551746096\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">\r\n              <img className=\"icon\" src={facebook} alt=\"FB\"/>\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/gary-nguyen-271504155/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">\r\n              <img className=\"icon\" src={linkedin} alt=\"LinkedIn\"/>\r\n            </a>\r\n            <a href=\"https://twitter.com/garynguyen_18\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">\r\n              <img className=\"icon\" src={twitter} alt=\"Twitter\"/>\r\n            </a>\r\n            <a href=\"https://twitter.com/garynguyen_18\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">\r\n              <img className=\"icon\" src={github} alt=\"Github\"/>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <NavBar open={navOpen} handleClick={setNavOpen}/>\r\n\r\n      <Particles\r\n        style={{backgroundColor: \"#297CBF\"}}\r\n        params={particles} \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\n\r\nimport NavBar from '../share/components/NavBar';\r\n\r\nimport resume from '../NGUYEN_GARY_resume.pdf';\r\nimport about from '../share/images/about.jpg';\r\nimport './About.scss';\r\n\r\nconst About = () => {\r\n  const [navOpen, setNavOpen] = useState(false)\r\n\r\n  return (\r\n    <div className=\"about_wrapper\">\r\n\r\n      \r\n      {/* { navOpen ? <div className=\"navbar_dark_layer\" /> : <div></div> } */}\r\n\r\n      <div className=\"about\">\r\n        <img className=\"about__image\" src={about} alt=\"about\" />\r\n        <div className=\"about__text\">\r\n          <div className=\"header\">About Me</div>\r\n          <div className=\"paragraph\">Hey! I'm Gary. Thanks for visiting <span role=\"img\" aria-label=\"(waving hand)\">ðŸ‘‹</span>. I'm a sophomore currently studying CS, Econ, and Data Science (6-14) at MIT.</div>\r\n          <div className=\"paragraph\">I'm a front-end enthusiast and aspiring UI/UX designer. In my free time, you'll find me dancing away in the studio, playing table tennis, or binging sci-fi shows!</div>\r\n          <div className=\"paragraph\">Looking to get in touch? Feel free to shoot me an email at <a href=\"mailto:garynguyen2018@gmail.com\">garynguyen2018@gmail.com</a> or take a look at my <a href={resume} target=\"_blank\" rel=\"noopener noreferrer\">resume</a>.</div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <NavBar open={navOpen} handleClick={setNavOpen}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport About from './About';\r\n// import Resume from './Resume';\r\n// import Projects from './Projects';\r\n// import Experiences from './Experiences';\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      {/* <Route path=\"/resume\" component={Resume} /> */}\r\n      {/* <Route path=\"/projects\" component={Projects} />\r\n      <Route path=\"/uiux\" component={Home} /> */}\r\n    </Switch>\r\n  </Router>\r\n)\r\n\r\nexport default Routes;","import React from 'react';\r\n\r\nimport Routes from './Routes';\r\n// import Footer from './share/components/Footer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}